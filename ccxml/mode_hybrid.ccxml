<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE ccxml PUBLIC "-//W3C//DTD CCXML 1.0//EN" 
  "http://www.w3.org/TR/2010/CR-ccxml-20100401/ccxml.dtd">
<ccxml version="1.0">        
        <var name="temp"/>
        <var name="sipConnectionId"  />
        <var name="createCallId"  />
        <var name="transferDest"  />
        <var name="transferTimeoutId"/>
        <var name="transferDialogId"/>
        <var name="dialogId"  />
        <var name="dialogStarted" expr="false"  />
        <var name="stateStep"  expr="''"/>
        
    
    
        <eventprocessor statevariable="stateStep">           
           <transition event="ccxml.loaded" >     
             <log label="'hybrid:ccxml.loaded.event$'" expr= "JSON.stringify(event$)" />              
             <log label="'hybrid:ccxml.loaded.application'" expr= "JSON.stringify(application)" />              
             <log label="'hybrid:sipid'" expr= "application.findSipConnectionId()" />

             <accept connectionid="application.connectionid" />             
           </transition>

		<!-- ============================= CONNECTION ============================= -->
           <transition  event="connection.alerting" >
               <log label="'hybrid:connection.alerting'" expr= "session.connections[event$.connectionid].remote" />
               <accept />
           </transition>

		   <!-- connection -->
           <transition event="connection.accept.failed" >           
		     <if cond="session.connections.length ==1">  
                <exit/>
			 </if>			 
           </transition>


           <transition event="connection.error" >           
		     <if cond="session.connections.length ==1">  
                <exit/>
			 </if>			 
           </transition>

		   <!-- only outgoing result--> 
           <transition event="connection.failed" >             
		   
             <exit/>
           </transition>
           <transition event="error.connection.wrongstate" >             
             <log label= "'error.connection.wrongstate:reason='" expr= "event$.reason" />
             <log label= "'error.connection.wrongstate:tagname='" expr= "event$.tagname" />
		   
             <exit/>
           </transition>

           <transition event="connection.connected" >           
             <log label= "'connection.connected'" expr= "session.connections[event$.connectionid].remote" />
             <if cond="!Boolean(dialogId)">           
			           <dialogstart 
                    src = "session.values.startup.url.voicexml"    
                    dialogid="dialogId"    
                    connectionid="event$.connectionid"
                    mediadirection="'both'" 
                    parameters=""/>	
             <else/>
                <join id1="event$.connectionid" id2="dialogId"/>
             </if>			 
           </transition>

           <transition event="connection.disconnected" >           
             <log label="'connection.disconnected'" expr= "session.connections[event$.connectionid].remote" />
             <log label="'connection.disconnected:reason='" expr= "event$.reason" />
             
             <if cond = "event$.connectionid != createCallId">
                <if cond="Boolean(dialogId)">
                  <dialogterminate dialogid="dialogId" />
                <else/> 
                  <exit/> 
                </if>
             </if>
           </transition>

<!--
           <transition event="conference.joined" >
 		     <log label= "'conference.joined.id1='" expr= "event$.id1" />
             <log label= "'conference.joined.id2='" expr= "event$.id2" />			 
             <log label= "'conference.joined.object1='" expr= "JSON.stringify(event$.object1)" />
             <log label= "'conference.joined.object2='" expr= "JSON.stringify(event$.object2)" />			 
           </transition>

           <transition event="conference.unjoined" >

 		     <log label= "'conference.unjoined.id1='" expr= "event$.id1" />
             <log label= "'conference.unjoined.id2='" expr= "event$.id2" />
			 
             <log label= "'conference.unjoined.object1='" expr= "JSON.stringify(event$.object1)" />
             <log label= "'conference.unjoined.object2='" expr= "JSON.stringify(event$.object2)" />
			 
           </transition>
           <transition event="browser.status" >
             <log label= "'browser.status='" expr= "JSON.stringify(event$)" />
		   
           </transition>
-->
    <!-- =============================DIALOG ============================= -->
           <transition event="dialog.started" >
            <log label="'dialog'" expr= "event$.name" />
            <assign name="dialogStarted" expr="true" />
                           
           </transition>

		 
           <transition event="error.dialog.notstarted">
               <log label="'dialog'" expr= "event$.name" />
               <exit expr = "event$.name" />

           </transition>

     	   <transition event="error.dialog">
               <log label="'dialog'" expr= "event$.name" />
               <exit expr = "event$.reason" />

           </transition>

           <transition event="dialog.exit">
               <log label="'dialog'" expr= "event$.name" />
               <log label="'dialog.values'" expr= "event$.values" />
               <assign name="dialogStarted" expr="false" />
               <exit expr = "event$.name" />
           </transition>

           <transition event="dialog.disconnect">
               <log label="'dialog'" expr= "event$.name" />            
               <log label="'dialog.values'" expr= "event$.values.toString()" />			   
               <exit expr = "event$.name" />
           </transition>

           <!--  =====================   Transfer  ============================= -->
           <transition event="dialog.transfer">
               <log label="'dialog'" expr= "event$.name" />
               <log label="'dialog.transfer.TYPE'" expr= "event$.type" />
               <log label="'dialog.transfer.URI'" expr= "event$.uri" />
               
               
               <assign name="transferDest"  expr="event$.uri" /> 
               <assign name="sipConnectionId" expr="application.findSipConnectionId()" />
               <log label="'sipConnectionId'" expr= "sipConnectionId" />
               <if cond="Boolean(sipConnectionId)">               
                  <log label="'dialog.transfer'" expr= "'redirect.sipconnection'" />
                  <assign name="stateStep"  expr="'transferSip'" /> 
                  <redirect  connectionid="sipConnectionId" dest="event$.uri" />
               <else/>                  
                  <assign name="stateStep"  expr="'transferInviteSip'" /> 
                  <log label="'dialog.transfer'" expr= "'invite.sipconnection'" />
                  <!-- wait  incomming sip call -->
		          <send name    = "'transfer.timedout'"  
                    target  = "dialogId" 
                    targettype = "'ccxml'" 
                    delay      ="'30s'" 
                    sendid     ="transferTimeoutId" />
                  
		          <createcall
			          dest="'07070129440'" 
			          callerid="'07070129440'" 
			          connectionid="createCallId" 
                timeout="'10s'" />                                    
               </if>  
           </transition>

           <!-- ================== SIP-Transfer-Mode====================== -->
           <transition state="transferSip" event="connection.redirected" >           
		       <log label="event$.name" expr= "JSON.stringify(event$)" />			   
		       <send name    = "'dialog.transfer.complete'"  
                    target  = "dialogId" 
                    targettype = "'dialog'" 
                    namelist   = "result=%'connection.disconnect.transfer'%" />		  
           </transition>
           
           <transition state="transferSip" event="connection.redirect.failed" >           
		       <log label="event$.name" expr= "JSON.stringify(event$)" />			   
		       <send name    = "'dialog.transfer.complete'"  
                    target  = "dialogId" 
                    targettype = "'dialog'" 
                    namelist   = "result=%event$.reason%" />		             
           </transition>



           <!-- ================== Transfer Invite SIP call ====================== -->

           <transition state="transferInviteSip" event="connection.connected" >           
             <log label= "'connection.connected'" expr= "'transferInviteSip->'+session.connections[event$.connectionid].remote" />           
             <disconnect connectionid="event$.connectionid" />
           </transition>

           <transition state="transferInviteSip" event="connection.failed" >           
             <assign name="stateStep"  expr="''" /> 
             <cancel sendid="transferTimeoutId" />
		     <send name    = "'dialog.transfer.complete'"  
                    target  = "dialogId" 
                    targettype = "'dialog'" 
                    namelist   = "result=%event$.reason%" />		             
           </transition>

           <transition state="transferInviteSip" event="connection.disconnected" >           
             <log label= "'connection.disconnected'" expr= "'transferInviteSip->'+session.connections[event$.connectionid].remote" />
           
             <assign name="stateStep"  expr="'transferWaitSip'" /> 
           </transition>

           <!-- ================== Wait SIP call ====================== -->
           <transition state="transferWaitSip" event="connection.alerting" >           
               <log label= "'connection.alerting'" expr= "'transferInviteSip->'+session.connections[event$.connectionid].remote" />
               <cancel sendid="transferTimeoutId" />
               <accept />
           </transition>
                      
           <transition state="transferWaitSip" event="connection.connected" >           
               <log label= "'connection.connected'" expr= "'transferWaitSip->'+session.connections[event$.connectionid].remote" />
               <assign name="sipConnectionId"  expr="event$.connectionid" /> 
               <assign name="stateStep"  expr="'transferDialingMent'" /> 
               
			   <dialogstart 
                    src = "application.makeHttpUrl('project/01090979440/dialing_ment.vxml')"    
                    dialogid="transferDialogId"    
                    connectionid="event$.connectionid"
                    mediadirection="'both'" />	
               
           </transition>

    <!-- ============================= Transfer Dialog ============================= -->
           <transition state="transferDialingMent" event="dialog.started" >
            <log label="'transferDialingMent:dialog'" expr= "event$.name" />                           
           </transition>
		 
           <transition state="transferDialingMent" event="error.dialog.notstarted error.dialog dialog.exit">
               <log label="'transferDialingMent:dialog'" expr= "event$.name" />
               <assign name="stateStep"  expr="'transferSip'" /> 
               
               <redirect  connectionid="sipConnectionId" dest="transferDest" />
           </transition>


<!-- ==========================  Timed out ================ -->

           <transition event="transfer.timedout" >           
		       <send name    = "'dialog.transfer.complete'"  
                    target  = "dialogId" 
                    targettype = "'dialog'" 
                    namelist   = "result=%'noanswer'%" />		             
           
           </transition>

           
          
       </eventprocessor>
</ccxml>
